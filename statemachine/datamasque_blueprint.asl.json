{
  "Comment": "A blueprint to automate the creation of masked snapshots for a specific RDS DB instance.",
  "StartAt": "Describe DB Snapshots",
  "States": {
    "Describe DB Snapshots": {
      "Type": "Task",
      "Resource": "${DescribeDBSnapshotFunctionArn}",
      "Next": "CheckSnapshotStatus"
    },
    "CheckSnapshotStatus": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.SourceDBSnapshotStatus",
          "StringEquals": "available",
          "Next": "Describe DB Instances"
        },
        {
          "Variable": "$.SourceDBSnapshotStatus",
          "StringEquals": "failed",
          "Next": "FailState"
        }
      ],
      "Default": "WaitforSnapshot"
    },
    "WaitforSnapshot": {
      "Type": "Wait",
      "Seconds": 120,
      "Next": "Describe DB Snapshots"
    },
    "Describe DB Instances": {
      "Type": "Task",
      "Resource": "${DescribeDBInstancesFunctionArn}",
      "Next": "Restore DB from Snapshot"
    },
    "Restore DB from Snapshot": {
      "Type": "Task",
      "Resource": "${RestoreDBInstanceFromSnapshotFunctionArn}",
      "Next": "CheckDBAvailability"
    },
    "CheckDBAvailability": {
      "Type": "Task",
      "Resource": "${CheckDBAvailabilityArn}",
      "Next": "IsDBAvailable"
    },
    "IsDBAvailable": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "available",
          "Next": "Datamasque API run"
        },
        {
          "Variable": "$.status",
          "StringEquals": "failure",
          "Next": "FailState"
        }
      ],
      "Default": "WaitBeforeRetry"
    },
    "WaitBeforeRetry": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "CheckDBAvailability"
    },
    "FailState": {
      "Type": "Fail",
      "CausePath": "$.Error",
      "ErrorPath": "$.Error"
    },
    "Datamasque API run": {
      "Type": "Task",
      "Resource": "${DatamasqueRunFunctionArn}",
      "Next": "IsMaskRunComplete",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "FailState"
        }
      ]
    },
    "IsMaskRunComplete": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.MaskRunStatus",
          "StringMatches": "finish*",
          "Next": "CreateDBSnapshot"
        },
        {
          "Variable": "$.MaskRunStatus",
          "StringMatches": "fail*",
          "Next": "FailState"
        }
      ],
      "Default": "MaskingRunInProgress"
    },
    "MaskingRunInProgress": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "CheckMaskingRunStatus"
    },
    "CheckMaskingRunStatus": {
      "Type": "Task",
      "Resource": "${CheckMaskingRunStatus}",
      "Next": "IsMaskRunComplete"
    },
    "CreateDBSnapshot": {
      "Type": "Task",
      "Resource": "${CreateMaskedSnapshot}",
      "Next": "CheckMaskedSnapshotStatus"
    },
    "CheckMaskedSnapshotStatus": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.MaskedSnapshotStatus",
          "StringEquals": "available",
          "Next": "DeleteDBInstance"
        },
        {
          "Variable": "$.MaskedSnapshotStatus",
          "StringEquals": "failure",
          "Next": "FailState"
        }
      ],
      "Default": "WaitforMaskedSnapshot"
    },
    "WaitforMaskedSnapshot": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "CheckMaskedSnapshot"
    },
    "CheckMaskedSnapshot": {
      "Type": "Task",
      "Resource": "${CheckMaskedSnapshot}",
      "Next": "CheckMaskedSnapshotStatus"
    },
    "DeleteDBInstance": {
      "Type": "Task",
      "ResultPath": null,
      "Parameters": {
        "DbInstanceIdentifier.$": "$.DBInstance",
        "SkipFinalSnapshot": true
      },
      "Next": "OutputMaskedSnapshot",
      "Resource": "arn:aws:states:::aws-sdk:rds:deleteDBInstance"
    },
    "OutputMaskedSnapshot": {
      "Type": "Pass",
      "OutputPath": "$.MaskedDBSnapshotIdentifier",
      "End": true
    }
  }
}