AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the lambdas will be deployed.
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of SUbnet IDs where the lambdas will be deployed.
  DatamasqueBaseUrl:
    Type: String
    Description: DATAMASQUE instance URL.
  DatamasqueSecretArn:
    Type: String
    Description: AWS secret for DATAMASQUE instance credentials.

Resources:
  RestoreDBInstanceFromSnapshotSQS:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 300

  DatamasqueBlueprintSQS:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 300

  # SqsConsumerSg:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: DATAMASQUE blueprint SQS consumer Lambda security group
  #     VpcId:
  #       Ref: VpcId

  # SqsConsumer:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: functions/sqs_consumer/
  #     Handler: app.lambda_handler
  #     Runtime: python3.9
  #     Timeout: 10
  #     Architectures:
  #       - x86_64
  #     Events:
  #       DatamasqueApiSQSEvent:
  #         Type: SQS
  #         Properties:
  #           Queue: !GetAtt DatamasqueBlueprintSQS.Arn
  #           BatchSize: 1
  #     Policies:
  #       - VPCAccessPolicy: {}
  #       - AWSSecretsManagerGetSecretValuePolicy:
  #           SecretArn: !Ref DatamasqueSecretArn
  #       - SQSSendMessagePolicy:
  #           QueueName: !GetAtt DatamasqueBlueprintSQS.QueueName
  #       - Statement:
  #           - Action:
  #               - states:SendTaskSuccess
  #               - states:SendTaskFailure
  #             Effect: Allow
  #             Resource: !GetAtt DatamasqueBlueprintStateMachine.Arn
  #     VpcConfig:
  #       SubnetIds:
  #         Ref: SubnetIds
  #       SecurityGroupIds:
  #         - Ref: SqsConsumerSg
  #     Environment:
  #       Variables:
  #         DATANASQUE_BASE_URL: !Ref DatamasqueBaseUrl
  #         DATAMASQUE_SECRET_ARN: !Ref DatamasqueSecretArn
  #         SQS_URL: !Ref DatamasqueBlueprintSQS

  DatamasqueRunSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: DATAMASQUE blueprint API run Lambda security group
      VpcId:
        Ref: VpcId

  DatamasqueRun:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/datamasque_run/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 10
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref DatamasqueSecretArn
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:ap-southeast-2:897875381524:secret:ae-demo/dm/connections-1d2iUw
      VpcConfig:
        SubnetIds:
          Ref: SubnetIds
        SecurityGroupIds:
          - Ref: DatamasqueRunSg
      Environment:
        Variables:
          DATANASQUE_BASE_URL: !Ref DatamasqueBaseUrl
          # DATAMASQUE_CONNECTION_ID: !Ref DatamasqueConnectionId
          # DATAMASQUE_RULESET_ID: !Ref DatamasqueRuleSetId
          DATAMASQUE_SECRET_ARN: !Ref DatamasqueSecretArn

  DescribeDBInstances:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/describe_db_instances/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 10
      Architectures:
        - x86_64
      Policies:
        - AmazonRDSReadOnlyAccess

  DescribeDBSnapshot:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/describe_db_snapshots/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 10
      Architectures:
        - x86_64
      Policies:
        - AmazonRDSReadOnlyAccess
        - Statement:
            - Action:
                - rds:CreateDBSnapshot
                - rds:AddTagsToResource
              Effect: Allow
              Resource: "*"

  RestoreDBInstanceFromSnapshot:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/restore_db_instance_from_db_snapshot/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 10
      Architectures:
        - x86_64
      Policies:
        - AmazonRDSReadOnlyAccess
        - Statement:
            - Action:
                - iam:PassRole
                - rds:AddTagsToResource
                - rds:RestoreDBInstanceFromDBSnapshot
              Effect: Allow
              Resource: "*"

  CheckDBAvailability:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/check_db_availability/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 10
      Architectures:
        - x86_64
      Policies:
        - AmazonRDSReadOnlyAccess

  CreateMaskedSnapshot:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/create_masked_snapshot/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 60
      Architectures:
        - x86_64
      Policies:
        - AmazonRDSReadOnlyAccess
        - Statement:
            - Action:
                - rds:CreateDBSnapshot
              Effect: Allow
              Resource: "*"

  CheckMaskedSnapshot:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/check_masked_snapshot/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 60
      Architectures:
        - x86_64
      Policies:
        - AmazonRDSReadOnlyAccess

  CheckMaskingRunStatus:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/check_masking_run/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 20
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref DatamasqueSecretArn
      VpcConfig:
        SubnetIds:
          Ref: SubnetIds
        SecurityGroupIds:
          - Ref: DatamasqueRunSg
      Environment:
        Variables:
          DATANASQUE_BASE_URL: !Ref DatamasqueBaseUrl
          # DATAMASQUE_CONNECTION_ID: !Ref DatamasqueConnectionId
          # DATAMASQUE_RULESET_ID: !Ref DatamasqueRuleSetId
          DATAMASQUE_SECRET_ARN: !Ref DatamasqueSecretArn

  WaitRestoreDBInstanceFromSnapshot:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/wait_restore_db_instance_from_db_snapshot/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 10
      Architectures:
        - x86_64
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt RestoreDBInstanceFromSnapshotSQS.Arn
            BatchSize: 1
      Policies:
        - AmazonRDSReadOnlyAccess
        - SQSSendMessagePolicy:
            QueueName: !GetAtt RestoreDBInstanceFromSnapshotSQS.QueueName
        - Statement:
            - Action:
                - states:SendTaskSuccess
                - states:SendTaskFailure
              Effect: Allow
              Resource: !GetAtt DatamasqueBlueprintStateMachine.Arn
      Environment:
        Variables:
          SQS_URL: !Ref RestoreDBInstanceFromSnapshotSQS

  DatamasqueBlueprintStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: statemachine/datamasque_blueprint.asl.json
      DefinitionSubstitutions:
        DatamasqueRunFunctionArn: !GetAtt DatamasqueRun.Arn
        DescribeDBSnapshotFunctionArn: !GetAtt DescribeDBSnapshot.Arn
        DescribeDBInstancesFunctionArn: !GetAtt DescribeDBInstances.Arn
        RestoreDBInstanceFromSnapshotFunctionArn: !GetAtt RestoreDBInstanceFromSnapshot.Arn
        CheckDBAvailabilityArn: !GetAtt CheckDBAvailability.Arn
        CheckMaskingRunStatus: !GetAtt CheckMaskingRunStatus.Arn
        CreateMaskedSnapshot: !GetAtt CreateMaskedSnapshot.Arn
        CheckMaskedSnapshot: !GetAtt CheckMaskedSnapshot.Arn
        DatamasqueBlueprintSQSQueue: !Ref DatamasqueBlueprintSQS
        RestoreDBInstanceFromSnapshotSQSQueue: !Ref RestoreDBInstanceFromSnapshotSQS
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref DescribeDBInstances
        - LambdaInvokePolicy:
            FunctionName: !Ref DescribeDBSnapshot
        - LambdaInvokePolicy:
            FunctionName: !Ref RestoreDBInstanceFromSnapshot
        - LambdaInvokePolicy:
            FunctionName: !Ref DatamasqueRun
        - LambdaInvokePolicy:
            FunctionName: !Ref CheckDBAvailability
        - LambdaInvokePolicy:
            FunctionName: !Ref CheckMaskingRunStatus
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateMaskedSnapshot
        - LambdaInvokePolicy:
            FunctionName: !Ref CheckMaskedSnapshot
        - Statement:
            - Action:
                - rds:DeleteDBInstance
              Effect: Allow
              Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*-datamasque"
            - Action:
                - rds:CreateDBSnapshot
              Effect: Allow
              Resource: "*"
        - Statement:
            - Action:
                - sqs:SendMessage
              Effect: Allow
              Resource:
                - !GetAtt DatamasqueBlueprintSQS.Arn
                - !GetAtt RestoreDBInstanceFromSnapshotSQS.Arn
      Events:
        Schedule:
          Type: Schedule # More info about Schedule Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-schedule.html
          Properties:
            Description: Schedule to run the DATAMASQUE state machine weekly
            Enabled: False
            Schedule: "rate(7 days)"
            Input: '{"DBInstanceIdentifier": "source-postgres-rds"}'
